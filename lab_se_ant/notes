compile
javac Programm.java  // компилируем

build
jar cfe test.jar Programm *.class // c - create / f - file / e - class entry point / test.jar - archive name / Programm - class name entry point / *.class - all .class files

Test
https://www.vogella.com/tutorials/JUnit/article.html
ant -lib /media/anon/Games/Docs/Projects/SE/lab3/lib/ test

lib dir /home/anon/.ant/lib

Написать сценарий для утилиты Apache Ant, реализующий компиляцию, тестирование и упаковку в jar-архив кода проекта из лабораторной работы №3 по дисциплине "Программирование интернет-приложений".

Каждый этап должен быть выделен в отдельный блок сценария; все переменные и константы, используемые в сценарии, должны быть вынесены в отдельный файл параметров; MANIFEST.MF должен содержать информацию о версии и о запускаемом классе.

Cценарий должен реализовывать следующие цели (targets):

    compile - компиляция исходных кодов проекта.
    build - компиляция исходных кодов проекта и их упаковка в исполняемый jar-архив. Компиляцию исходных кодов реализовать посредством вызова цели compile.
    clean - удаление скомпилированных классов проекта и всех временных файлов (если они есть).
    test - запуск junit-тестов проекта. Перед запуском тестов необходимо осуществить сборку проекта (цель build).
    doc - добавление в MANIFEST.MF MD5 и SHA-1 файлов проекта, а также генерация и добавление в архив javadoc по всем классам проекта.
    diff - осуществляет проверку состояния рабочей копии, и, если изменения не касаются классов, указанных в файле параметров выполняет commit в репозиторий svn.

Вопросы к защите лабораторной работы:

    Тестирование ПО. Цель тестирования, виды тестирования.
    Модульное тестирование, основные принципы и используемые подходы.
    Пакет JUnit, основные API.
    Системы автоматической сборки. Назначение, принципы работы, примеры систем.
    Утилита make. Make-файлы, цели и правила.
    Утилита Ant. Сценарии сборки, цели и команды.